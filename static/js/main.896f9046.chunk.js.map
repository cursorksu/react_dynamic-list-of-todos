{"version":3,"sources":["utils/api.ts","utils/constants.ts","components/TodoItem.tsx","components/TodoList.tsx","components/Controller.tsx","App.tsx","index.tsx"],"names":["getData","url","a","fetch","then","response","json","getUsers","getTodos","getCorrectTodos","todos","users","map","todo","user","find","id","userId","TodoItem","title","completed","className","name","type","defaultChecked","TodoList","props","key","Controller","idSorter","titleSorter","userNameSorter","completedSorter","data-name","onClick","App","useState","todoList","setTodoList","isLoading","setIsLoading","length","list","setTimeout","sort","b","localeCompare","Number","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.896f9046.chunk.js","sourcesContent":["import { USERS_URL, TODOS_URL } from './constants';\n\n\nexport const getData = async <T>(url: string): Promise<T> => {\n  return fetch(url)\n    .then(response => response.json());\n};\n\nexport const getUsers = async (): Promise<User[]> => {\n  return getData<User[]>(USERS_URL);\n};\n\nexport const getTodos = async (): Promise<Todo[]> => {\n  return getData<Todo[]>(TODOS_URL);\n};\n\nexport const getCorrectTodos = async (): Promise<PreparedTodo[]> => {\n  const todos: Todo[] = await getTodos();\n  const users: User[] = await getUsers();\n\n  return todos.map(todo => ({\n    ...todo,\n    user: users.find(user => user.id === todo.userId),\n  }));\n};\n","export const USERS_URL = 'https://jsonplaceholder.typicode.com/users';\nexport const TODOS_URL = 'https://jsonplaceholder.typicode.com/todos';\n","import React, { FC } from 'react';\n\ninterface Props {\n  todo: PreparedTodo;\n}\n\nexport const TodoItem: FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    user,\n    completed,\n  } = todo;\n\n  return (\n    <li\n      className=\"list-group-item\"\n    >\n      <div className=\"todo__cell todo__id\">{id}</div>\n      <div className=\"todo__cell todo__title\">{title}</div>\n      <div className=\"todo__cell todo__user\">{user?.name}</div>\n      <div className=\"todo__cell todo__completed\">\n        <input\n          type=\"checkbox\"\n          defaultChecked={completed}\n        />\n      </div>\n    </li>\n  );\n};\n","import React, { FC } from 'react';\nimport { TodoItem } from './TodoItem';\n\ninterface Props {\n  todos: PreparedTodo[];\n}\n\nexport const TodoList: FC<Props> = (props) => {\n  const { todos } = props;\n\n  return (\n    <ul className=\"list-group\">\n      {todos.map((todo) => (\n        <TodoItem key={todo.id} todo={todo} />\n      ))}\n    </ul>\n  );\n};\n","import React, { FC } from 'react';\n\ninterface Props {\n  idSorter: () => void;\n  titleSorter: () => void;\n  userNameSorter: () => void;\n  completedSorter: () => void;\n}\n\nexport const Controller: FC <Props> = (props) => {\n  const {\n    idSorter,\n    titleSorter,\n    userNameSorter,\n    completedSorter,\n  } = props;\n\n  return (\n    <li className=\"list-group-item primary-bg\">\n      <div className=\"todo__cell todo__id\">\n        <button\n          data-name=\"title\"\n          type=\"button\"\n          onClick={idSorter}\n        >\n          #\n        </button>\n      </div>\n      <div className=\"todo__cell todo__title\">\n        <button\n          data-name=\"title\"\n          type=\"button\"\n          onClick={titleSorter}\n        >\n          Sort by Title\n        </button>\n      </div>\n      <div className=\"todo__cell todo__user\">\n        <button\n          data-name=\"user\"\n          type=\"button\"\n          onClick={userNameSorter}\n        >\n          Sort by User\n        </button>\n      </div>\n      <div className=\"todo__cell todo__completed\">\n        <button\n          data-name=\"completed\"\n          type=\"button\"\n          onClick={completedSorter}\n        >\n          +\n        </button>\n      </div>\n    </li>\n  );\n};\n","import React, { useState, FC } from 'react';\nimport 'bootswatch/dist/lux/bootstrap.min.css';\nimport { getCorrectTodos } from './utils/api';\nimport { TodoList } from './components/TodoList';\nimport { Controller } from './components/Controller';\n\nimport './App.css';\n\nconst App: FC = () => {\n  const [todoList, setTodoList] = useState<PreparedTodo[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleClick = () => {\n    setIsLoading(true);\n    getCorrectTodos().then(list => {\n      // setTimeout for demo only\n      setTimeout(() => {\n        setTodoList(list);\n        setIsLoading(false);\n      }, 500);\n    });\n  };\n\n  const idSorter = () => {\n    setTodoList([...todoList]\n      .sort((a, b) => a.id - b.id));\n  };\n\n  const titleSorter = () => {\n    setTodoList([...todoList]\n      .sort((a, b) => a.title.localeCompare(b.title)));\n  };\n\n  const userNameSorter = () => {\n    setTodoList([...todoList]\n      .sort((a, b) => {\n        if (a.user && b.user) {\n          return a.user.name.localeCompare(b.user.name);\n        }\n\n        return 0;\n      }));\n  };\n\n  const completedSorter = () => {\n    setTodoList([...todoList]\n      .sort((a, b) => {\n        return Number(a.completed) - Number(b.completed);\n      }));\n  };\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title text-center\">Dynamic list of TODOs</h1>\n\n      {todoList.length === 0 && (\n        <button type=\"button\" className=\"button-load\" onClick={handleClick}>\n          {isLoading ? 'Loading...' : 'Load'}\n        </button>\n      )}\n\n      {todoList.length !== 0 && (\n        <>\n          <Controller\n            idSorter={idSorter}\n            titleSorter={titleSorter}\n            userNameSorter={userNameSorter}\n            completedSorter={completedSorter}\n          />\n          <TodoList todos={todoList} />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}