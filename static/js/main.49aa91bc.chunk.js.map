{"version":3,"sources":["utils/api.ts","utils/constants.ts","components/TodoItem.tsx","components/TodoList.tsx","components/Controller.tsx","App.tsx","index.tsx"],"names":["getData","url","a","fetch","then","response","json","getUsers","getTodos","getCorrectTodos","todos","users","map","todo","user","find","id","userId","TodoItem","title","completed","className","name","type","defaultChecked","TodoList","props","key","Controller","idSorter","titleSorter","userNameSorter","completedSorter","data-name","onClick","App","useState","todoList","setTodoList","todoVisibleList","setVisibleList","isLoading","setIsLoading","isLoaded","setIsLoaded","list","setTimeout","sort","b","localeCompare","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.49aa91bc.chunk.js","sourcesContent":["import { USERS_URL, TODOS_URL } from './constants';\n\n\nexport const getData = async <T>(url: string): Promise<T> => {\n  return fetch(url)\n    .then(response => response.json());\n};\n\nexport const getUsers = async (): Promise<Users> => {\n  return getData<User[]>(USERS_URL);\n};\n\nexport const getTodos = async (): Promise<Todos> => {\n  return getData<Todos>(TODOS_URL);\n};\n\nexport const getCorrectTodos = async (): Promise<PreparedTodo[]> => {\n  const todos: Todos = await getTodos();\n  const users: Users = await getUsers();\n\n  return todos.map(todo => ({\n    ...todo,\n    user: users.find(user => user.id === todo.userId),\n  }));\n};\n","export const USERS_URL = 'https://jsonplaceholder.typicode.com/users';\nexport const TODOS_URL = 'https://jsonplaceholder.typicode.com/todos';\n","import React, { FC } from 'react';\n\ninterface Props {\n  todo: PreparedTodo;\n}\n\nexport const TodoItem: FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    user,\n    completed,\n  } = todo;\n\n  return (\n    <li\n      className=\"list-group-item\"\n    >\n      <div className=\"todo__cell todo__id\">{id}</div>\n      <div className=\"todo__cell todo__title\">{title}</div>\n      <div className=\"todo__cell todo__user\">{user?.name}</div>\n      <div className=\"todo__cell todo__completed\">\n        <input\n          type=\"checkbox\"\n          defaultChecked={completed}\n        />\n      </div>\n    </li>\n  );\n};\n","import React, { FC } from 'react';\nimport { TodoItem } from './TodoItem';\n\ninterface Props {\n  todos: PreparedTodo[];\n}\n\nexport const TodoList: FC<Props> = (props) => {\n  const { todos } = props;\n\n  return (\n    <ul className=\"list-group\">\n      {todos.map((todo) => (\n        <TodoItem key={todo.id} todo={todo} />\n      ))}\n    </ul>\n  );\n};\n","import React, { FC } from 'react';\n\ninterface Props {\n  idSorter: () => void;\n  titleSorter: () => void;\n  userNameSorter: () => void;\n  completedSorter: () => void;\n}\n\nexport const Controller: FC <Props> = (props) => {\n  const {\n    idSorter,\n    titleSorter,\n    userNameSorter,\n    completedSorter,\n  } = props;\n\n  return (\n    <li className=\"list-group-item primary-bg\">\n      <div className=\"todo__cell todo__id\">\n        <button\n          data-name=\"title\"\n          type=\"button\"\n          onClick={idSorter}\n        >\n          #\n        </button>\n      </div>\n      <div className=\"todo__cell todo__title\">\n        <button\n          data-name=\"title\"\n          type=\"button\"\n          onClick={titleSorter}\n        >\n          Sort by Title\n        </button>\n      </div>\n      <div className=\"todo__cell todo__user\">\n        <button\n          data-name=\"user\"\n          type=\"button\"\n          onClick={userNameSorter}\n        >\n          Sort by User\n        </button>\n      </div>\n      <div className=\"todo__cell todo__completed\">\n        <button\n          data-name=\"completed\"\n          type=\"button\"\n          onClick={completedSorter}\n        >\n          +\n        </button>\n      </div>\n    </li>\n  );\n};\n","import React, { useState, FC } from 'react';\nimport 'bootswatch/dist/lux/bootstrap.min.css';\nimport { getCorrectTodos } from './utils/api';\nimport { TodoList } from './components/TodoList';\nimport { Controller } from './components/Controller';\n\nimport './App.css';\n\nconst App: FC = () => {\n  const [todoList, setTodoList] = useState<PreparedTodo[]>([]);\n  const [todoVisibleList, setVisibleList] = useState<PreparedTodo[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n\n  const handleClick = () => {\n    getCorrectTodos().then(list => {\n      setIsLoading(true);\n      setTodoList(list);\n      setVisibleList(list);\n    }).then(list => {\n      // setTimeout for demo only\n      setTimeout(() => {\n        setIsLoaded(true);\n      }, 500);\n\n      return list;\n    });\n  };\n\n  const idSorter = () => {\n    setVisibleList([...todoList]\n      .sort((a, b) => a.id - b.id));\n  };\n\n  const titleSorter = () => {\n    setVisibleList([...todoList]\n      .sort((a, b) => a.title.localeCompare(b.title)));\n  };\n\n  const userNameSorter = () => {\n    setVisibleList([...todoList]\n      .sort((a, b) => {\n        if (a.user && b.user) {\n          return a.user.name.localeCompare(b.user.name);\n        }\n\n        return 0;\n      }));\n  };\n\n  const completedSorter = () => {\n    setVisibleList([...todoList]\n      .sort((a, b) => {\n        const isCompletedA = a.completed ? 1 : 0;\n        const isCompletedB = b.completed ? 1 : 0;\n\n        return isCompletedA - isCompletedB;\n      }));\n  };\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title text-center\">Dynamic list of TODOs</h1>\n      {!isLoaded\n      && (\n        <button type=\"button\" className=\"button\" onClick={handleClick}>\n          {isLoading ? 'Loading...' : 'Load'}\n        </button>\n      )}\n\n      {isLoaded\n        && (\n          <>\n            <Controller\n              idSorter={idSorter}\n              titleSorter={titleSorter}\n              userNameSorter={userNameSorter}\n              completedSorter={completedSorter}\n            />\n            <TodoList todos={todoVisibleList} />\n          </>\n        )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}